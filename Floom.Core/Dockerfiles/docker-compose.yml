#  ______ _                                  _____ 
# |  ____| |                           /\   |_   _|
# | |__  | | ___   ___  _ __ ___      /  \    | |  
# |  __| | |/ _ \ / _ \| '_ ` _ \    / /\ \   | |  
# | |    | | (_) | (_) | | | | | |_ / ____ \ _| |_ 
# |_|    |_|\___/ \___/|_| |_| |_(_)_/    \_\_____| 

# Visit https://floom.ai/ for more info.
# Floom's GitHub: https://github.com/FloomAI | Floom: https://github.com/FloomAI/Floom

# Run "docker compose up -d" in this file's directory

# Floom default installation comes with:
# 1. MongoDB (for management, logging, auditing, monitoring, authentication etc.)
# 2. Milvus Vector Database (vector database for quality search, embeddings store, smart caching etc.)
# -----------------------------------------------------------------------------------------------------
# The default setup is sufficient for dev/test environments.
# For production, Floom recommends using production-grade managed databases: MongoDB and Milvus/Pinecone. 
# -----------------------------------------------------------------------------------------------------
# To use an external management database (MongoDB):
# Modify the FLOOM_DB_USER, FLOOM_DB_PASSWORD and FLOOM_DB_ADDRESS environment variables in 'floom' service.
# -----------------------------------------------------------------------------------------------------
# To use an external vector database (Milvus/Pinecone):
# Modify VDB_VENDOR, VDB_APIKEY, VDB_ENDPOINT, VDB_ENVIRONMENT, VDB_PORT environment variables in 'floom' service.

version: '3.8'

services:
  
  floom:
    image: floomai/floom:latest
    container_name: floom-core
    environment:
      - FLOOM_DB_ADDRESS=mongo:27017
      - FLOOM_DB_USER=root
      - FLOOM_DB_PASSWORD=MyFloom
      - FLOOM_DEPENDENCIES_PATH=./DLLs
      - FLOOM_ENVIRONMENT=local
      - FLOOM_AUTHENTICATION=false
      - FLOOM_DATABASE_TYPE=mongodb
      - FLOOM_VDB_VENDOR=Milvus
      - FLOOM_VDB_ENDPOINT=standalone
      - FLOOM_VDB_PORT=19530
      - FLOOM_VDB_USERNAME=root
      - FLOOM_VDB_PASSWORD=Milvus
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/floom:/app/logs
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:80/v1/Misc/Health"]
        interval: 10s
        timeout: 10s
        retries: 2
    ports:
      - "4050:4050"
    depends_on:
      mongo:
        condition: service_healthy
  
  # Floom comes with MongoDB for development and testing purposes. 
  # You can configure your own MongoDB for production purposes and comment this one out.
  mongo:
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=MyFloom
    volumes:
      - ../docker_volumes/mongo:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "4060:27017"

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ../docker_volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:2379/health" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ../docker_volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.0
    command: [ "milvus", "run", "standalone" ]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    volumes:
      - ../docker_volumes/milvus:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

networks:
  default:
    name: floom